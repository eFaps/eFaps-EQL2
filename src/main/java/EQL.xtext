grammar org.efaps.eql.EQL hidden( WS )

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.efaps.org/EQL"

Statement:
    PrintStatement | UpdateStatement | DeleteStatement | InsertStatement | CIPrintStatement | ExecStatement;

PrintStatement:
    (ObjectPrintStatement | ListPrintStatement) selection=Selection (order=Order)?;

ObjectPrintStatement:
    'print' ('obj' | 'object') oid=OID
;

ListPrintStatement:
    'print' 'list' '(' oids+=OID (',' oids+=OID)* ')'
;

UpdateStatement:
    (ObjectUpdateStatement | ListUpdateStatement | QueryUpdateStatement)
    'set' (updateElements+=UpdateElement) (',' updateElements+=UpdateElement)*
;

ListUpdateStatement:
    'update' 'list' '(' oids+=OID (',' oids+=OID)* ')' 
;


ObjectUpdateStatement:
    'update' ('obj' | 'object') oid=OID 
;

QueryUpdateStatement:
    'update' query=Query
;

DeleteStatement:
    ObjectDeleteStatement | ListDeleteStatement | QueryDeleteStatement
;

ObjectDeleteStatement:
    'delete' ('obj' | 'object') oid=OID
;

ListDeleteStatement:
    'delete' 'list' '(' oids+=OID (',' oids+=OID)* ')'
;

QueryDeleteStatement:
    'delete' query=Query
;

InsertStatement:
    'insert' 'type' typeName=Type 'set' (updateElements+=UpdateElement) (',' updateElements+=UpdateElement)*
;



CIPrintStatement:
    CIPrintTypeStatement | CIPrintFormStatement
;
    

CIPrintTypeStatement:
    'print' 'ci' 'type' name=NAMESTR
;

CIPrintFormStatement:
    'print' 'ci' 'form' name=NAMESTR
;

ExecStatement:
    ('exec' | 'execute') className=ClazzName (parameters+=(NUM | STRING) (',' parameters+=(NUM | STRING))*)? ('select'
    selects+=ExecSelectionElement (',' selects+=ExecSelectionElement)*)? (order=Order)?;


Query:
    'query' ('type' types+=Type) (',' types+=Type)* (where=Where)? (limit=Limit)?;

UpdateElement:
    attribute=Attribute '=' value=(NUM | STRING)
;


ExecSelectionElement:
    index=NUM (=> 'as' alias=Alias)?
;


Where:
    'where' elements+=WhereElement ('and' elements+=WhereElement)*
;

WhereElement:
    (attribute=Attribute) => comparison=Comparison (values+=(Value | OID | STRING | BOOLEAN) | '(' values+=(Value | OID | STRING | BOOLEAN)
    ("," values+=(Value | OID | STRING | BOOLEAN))* ')' | nestedQuery=NestedQuery );


NestedQuery :
    '(' 'query' ('type' types+=Type) (',' types+=Type)* (where=Where)? (selection=Selection)? ')'
;


Value:
    NUM;

OID:
    NUM+ "."+ NUM;

enum Comparison:
    EQUAL='==' | EQUAL='eq' | LESS='<' | GREATER='>' | UNEQUAL='!=' | LIKE='like' | IN='in' | NOTIN='not in';

Selection:
    'select' selects+=Select (',' selects+=Select)*;

Select:
     elements+=SelectElement ('.' elements+=SelectElement)* (=> 'as' alias=Alias)?;

SelectElement:
    ( AttributeSelectElement | AttributeSetSelectElement | LinktoSelectElement | ExecSelectElement | BaseSelectElement
        | FormatSelectElement | LinkfromSelectElement | ClassSelectElement
    )
;

LinkfromSelectElement:
    'linkfrom['typeName=Type'#'attribute=Attribute']'
;

ClassSelectElement:
    'class['name=Attribute']'
;

LinktoSelectElement:
    'linkto['name=Attribute']'
;

AttributeSelectElement:
    'attribute['name=Attribute']'
;

AttributeSetSelectElement:
    'attributeset['name=Attribute']'
;

FormatSelectElement:
    value=FORMAT
;

BaseSelectElement:
    element = SimpleSelectElement
;

ExecSelectElement:
    ('exec' | 'execute') className=ClazzName parameters+=(STRING | NUM)(","parameters+=(STRING | NUM))*;


ClazzName hidden():
    NAMESTR('.'NAMESTR)+ (=>WS)
;


enum SimpleSelectElement: 
    TYPE='type' | OID='oid' | INSTANCE='instance' | LABEL='label' | ID='id' | UUID='uuid' | NAME='name' |
    CLASS='class' | VALUE='value' | BASE='base' | UOM='uom' | FILE='file' | LENGTH='length' | STATUS='status' | KEY='key'
;

Order:
    'order' 'by' elements+=OrderElement (',' elements+=OrderElement)*;

OrderElement:
    key=(Alias | NUM) ('asc' |(desc?=('desc')))?;

Limit:
    'limit' value=NUM;

Alias:
    NAMESTR
;

Type:
    NAMESTR | UUID;

Attribute:
    NAMESTR
;


terminal FORMAT:
    'format[' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9' | "-" | "/")+ ']'
;

terminal BOOLEAN:
    'true' | 'false'
;

terminal NUM:
    ('0'..'9')+;

terminal fragment HEX:
    ('a'..'f' | '0'..'9');

terminal UUID:
    HEX HEX HEX HEX HEX HEX HEX HEX '-' HEX HEX HEX HEX '-' HEX HEX HEX HEX '-' HEX HEX HEX HEX '-' HEX HEX HEX HEX HEX HEX HEX HEX HEX HEX HEX HEX;

terminal STRING:
    '"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"' |
    "'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'"))* "'";

terminal NAMESTR:
    ('^')?('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

terminal WS:
    (' ' | '\t' | '\r' | '\n')+;

